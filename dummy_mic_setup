#!/bin/bash

function assert() {
    local message="$1"
    shift
    "$@"
    local rc=$?
    [ $rc -eq 0 ] && return 0
    set $(caller)
    date=$(date "+%Y-%m-%d %T%z")
    echo "$date $2 [$$]: $message (line=$1, rc=$rc)" >&2
    exit $rc
}

function find_dummy_mic() {
    local current_module
    local line

    LANG= pactl list modules | while read line
    do
        test "${line::8}" == "Module #" && current_module="${line:8}"
        test "${line}" == "Argument: sink_name=DummyMic" \
            && printf "%d\n" "${current_module}"
    done
}

assert "pactl not found" which pactl > /dev/null

existing_module="$(find_dummy_mic)"

if [ "${existing_module}" == "" ]
then
    new_module="$(pactl \
        load-module module-null-sink \
        sink_name=DummyMic \
    )"

    pacmd update-sink-proplist DummyMic device.description="\"Dummy microphone\""

    pactl \
        load-module module-remap-source \
        source_name=DummyMicRemap \
        master=DummyMic.monitor \
        > /dev/null

    pacmd update-source-proplist DummyMicRemap device.description="\"Dummy microphone\""

    printf 'DummyMic installed as Module #%d\n' "${new_module}"
else
    printf 'DummyMic already installed as Module #%d\n' "${existing_module}"
fi
