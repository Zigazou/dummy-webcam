#!/bin/bash
WIDTH=1280
HEIGHT=720

function assert() {
	local message="$1"
	shift
	"$@"
	local rc=$?
	[ $rc -eq 0 ] && return 0
	set $(caller)
	date=$(date "+%Y-%m-%d %T%z")
	echo "$date $2 [$$]: $message (line=$1, rc=$rc)" >&2
	exit $rc
}

# Get the ID_V4L_PRODUCT property of a special file.
function get_id_v4l_product() {
    local special_file="$1"

    udevadm info --query=property "${special_file}" \
        | grep "ID_V4L_PRODUCT" \
        | cut -c 16-
}

# Look for the v4l2loopback /dev/video* file.
function find_v4l2loopback_file() {
    local video_device
    local video_desc

    printf 'Looking for v4l2loopback special file:\n' >&2
    for video_device in /dev/video*
    do
        video_desc="$(get_id_v4l_product "${video_device}" 2>/dev/null)"

        printf '  - %s (%s) -> ' "${video_device}" "${video_desc}" >&2
        if [ "${video_desc}" == "Dummy video device (0x0000)" ]
        then
            printf 'FOUND!\n' >&2
            printf '%s' "${video_device}"
        else
            printf 'not a v4l2loopback special file\n' >&2
        fi
    done
}

# Send media file to the v4l2loopback.
function send_media_file() {
	local media_file="$1"
	local scaling="w=${WIDTH}:h=${HEIGHT}:force_original_aspect_ratio=1"
	local padding="${WIDTH}:${HEIGHT}:(ow-iw)/2:(oh-ih)/2:color=black"

	printf '  - Sending %s...\n' "${media_file}"
	ffmpeg \
		-loglevel error \
		-re \
		-i "${media_file}" \
		-vf "format=yuv420p, scale=${scaling}, pad=${padding}" \
		-f v4l2 \
		"${DUMMY_WEBCAM}"
}

assert "v4l2loopback module not loaded" grep -q v4l2loopback /proc/modules
assert "FFmpeg is not installed" which ffmpeg > /dev/null
assert "udevadm not found" which udevadm > /dev/null

DUMMY_WEBCAM="$(find_v4l2loopback_file)"
assert "${DUMMY_WEBCAM} does not exist" test -e ${DUMMY_WEBCAM}
assert "${DUMMY_WEBCAM} is not writable" test -w ${DUMMY_WEBCAM}

# Send each media file.
printf 'Playing files on %s at %d√ó%d:\n' "${DUMMY_WEBCAM}" "${WIDTH}" "${HEIGHT}"
for media_file in "$@"
do
	if [ -r "${media_file}" ]
	then
		send_media_file "${media_file}"
	else
		printf '  - %s not found or not readable\n' "${media_file}"
	fi
done

printf 'Done!\n'